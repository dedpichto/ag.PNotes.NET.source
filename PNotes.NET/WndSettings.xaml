<Window x:Class="PNotes.NET.WndSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:net="clr-namespace:PNotes.NET"
        xmlns:pnNumericUpDown="clr-namespace:PNNumericUpDown;assembly=PNNumericUpDown"
        xmlns:pnColorPicker="clr-namespace:PNColorPicker;assembly=PNColorPicker"
        xmlns:pnDateTimePicker="clr-namespace:PNDateTimePicker;assembly=PNDateTimePicker"
        xmlns:pnIp="clr-namespace:PNIPBox;assembly=PNIPBox"
        xmlns:sts="clr-namespace:WPFStandardStyles;assembly=WPFStandardStyles"
        Title="WndSettings" 
        x:Name="DlgSettings"
        Height="650" 
        Width="780"
        Style="{DynamicResource CustomWindowStyle}"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        SizeToContent="Width"
        Icon="{DynamicResource note_pinned}"
        TextElement.FontFamily="{Binding FontFamily}"
        TextElement.FontSize="{Binding FontSize}"
        TextElement.FontStretch="{Binding FontStretch}"
        TextElement.FontStyle="{Binding FontStyle}"
        TextElement.FontWeight="{Binding FontWeight}"
        Loaded="DlgSettings_Loaded"
        Closed="DlgSettings_Closed"
        Activated="DlgSettings_Activated">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static net:OkCancelCommands.CancelCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.SaveCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.ApplyCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.DefaultSettingsCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.ChangeFontCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.RestoreFontCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.CheckUpdateCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.DefaultVoiceCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.VoiceSampleCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.HotkeysCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.MenusManagementCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.CheckConnectionCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.CheckMessagesCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.CheckPluginsCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.RemovePluginCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:SettingsCommands.SyncNowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>

        <CommandBinding Command="{x:Static net:CommonCommands.DummyCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:CommonCommands.QuestionCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:CommonCommands.PwrdCreateCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:CommonCommands.PwrdChangeCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:CommonCommands.PwrdRemoveCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:CommonCommands.BrowseButtonCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>

        <CommandBinding Command="{x:Static net:GroupViewCommands.StandardViewCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:GroupViewCommands.SkinlessCaptionFontCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static net:GroupViewCommands.GroupIcontCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <x:Array Type="sys:Int32" x:Key="PostCount">
            <sys:Int32>5</sys:Int32>
            <sys:Int32>10</sys:Int32>
            <sys:Int32>20</sys:Int32>
            <sys:Int32>30</sys:Int32>
            <sys:Int32>40</sys:Int32>
            <sys:Int32>50</sys:Int32>
            <sys:Int32>100</sys:Int32>
            <sys:Int32>150</sys:Int32>
            <sys:Int32>200</sys:Int32>
            <sys:Int32>250</sys:Int32>
        </x:Array>
        <x:Array Type="sys:Int32" x:Key="Indents">
            <sys:Int32>100</sys:Int32>
            <sys:Int32>200</sys:Int32>
            <sys:Int32>300</sys:Int32>
            <sys:Int32>400</sys:Int32>
            <sys:Int32>500</sys:Int32>
        </x:Array>
        <x:Array Type="sys:Int32" x:Key="Margins">
            <sys:Int32>0</sys:Int32>
            <sys:Int32>1</sys:Int32>
            <sys:Int32>2</sys:Int32>
            <sys:Int32>3</sys:Int32>
            <sys:Int32>4</sys:Int32>
            <sys:Int32>5</sys:Int32>
            <sys:Int32>6</sys:Int32>
            <sys:Int32>7</sys:Int32>
            <sys:Int32>8</sys:Int32>
            <sys:Int32>9</sys:Int32>
            <sys:Int32>10</sys:Int32>
        </x:Array>
        <x:Array Type="sys:Int32" x:Key="Pars">
            <sys:Int32>100</sys:Int32>
            <sys:Int32>200</sys:Int32>
            <sys:Int32>300</sys:Int32>
            <sys:Int32>400</sys:Int32>
            <sys:Int32>500</sys:Int32>
        </x:Array>
        <x:Array Type="sys:Int32" x:Key="Days">
            <sys:Int32>1</sys:Int32>
            <sys:Int32>2</sys:Int32>
            <sys:Int32>3</sys:Int32>
            <sys:Int32>4</sys:Int32>
            <sys:Int32>5</sys:Int32>
            <sys:Int32>6</sys:Int32>
            <sys:Int32>7</sys:Int32>
            <sys:Int32>8</sys:Int32>
            <sys:Int32>9</sys:Int32>
            <sys:Int32>10</sys:Int32>
            <sys:Int32>11</sys:Int32>
            <sys:Int32>12</sys:Int32>
            <sys:Int32>13</sys:Int32>
            <sys:Int32>14</sys:Int32>
            <sys:Int32>15</sys:Int32>
            <sys:Int32>16</sys:Int32>
            <sys:Int32>17</sys:Int32>
            <sys:Int32>18</sys:Int32>
            <sys:Int32>19</sys:Int32>
            <sys:Int32>20</sys:Int32>
            <sys:Int32>21</sys:Int32>
            <sys:Int32>22</sys:Int32>
            <sys:Int32>23</sys:Int32>
            <sys:Int32>24</sys:Int32>
            <sys:Int32>25</sys:Int32>
            <sys:Int32>26</sys:Int32>
            <sys:Int32>27</sys:Int32>
            <sys:Int32>28</sys:Int32>
            <sys:Int32>29</sys:Int32>
            <sys:Int32>30</sys:Int32>
            <sys:Int32>31</sys:Int32>
        </x:Array>
        <x:Array Type="sys:String" x:Key="Formats">
            <sys:String>MMMM dd, yyyy</sys:String>
            <sys:String>MMMM dd yyyy</sys:String>
            <sys:String>MMMM dd yy</sys:String>
            <sys:String>MMM dd yyyy</sys:String>
            <sys:String>MMM dd yy</sys:String>
            <sys:String>MM dd yyyy</sys:String>
            <sys:String>MM dd yy</sys:String>
            <sys:String>MMM-dd-yyyy</sys:String>
            <sys:String>MMM-dd-yy</sys:String>
            <sys:String>MM-dd-yyyy</sys:String>
            <sys:String>MM-dd-yy</sys:String>
            <sys:String>MM/dd/yy</sys:String>
            <sys:String>MM/dd/yyyy</sys:String>
            <sys:String>MM.dd.yyyy</sys:String>
            <sys:String>MM.dd.yy</sys:String>
            <sys:String>yyyy-MM-dd</sys:String>
            <sys:String>yy-MM-dd</sys:String>
            <sys:String>yyyy.MM.dd</sys:String>
            <sys:String>yy.MM.dd</sys:String>
            <sys:String>yyyy/MM/dd</sys:String>
            <sys:String>yy/MM/dd</sys:String>
            <sys:String>dd/MM/yyyy</sys:String>
            <sys:String>dd/MM/yy</sys:String>
            <sys:String>dd.MM.yyyy</sys:String>
            <sys:String>dd.MM.yy</sys:String>
            <sys:String>dd-MM-yyyy</sys:String>
            <sys:String>dd-MM-yy</sys:String>
            <sys:String>dd MMMM yyyy</sys:String>
            <sys:String>dd MMM yyyy</sys:String>
            <sys:String>dd MMMM yy</sys:String>
            <sys:String>dd MMM yy</sys:String>
        </x:Array>
        <x:Array Type="sys:Int32" x:Key="Sizes">
            <sys:Int32>8</sys:Int32>
            <sys:Int32>9</sys:Int32>
            <sys:Int32>10</sys:Int32>
            <sys:Int32>11</sys:Int32>
            <sys:Int32>12</sys:Int32>
            <sys:Int32>14</sys:Int32>
            <sys:Int32>16</sys:Int32>
            <sys:Int32>18</sys:Int32>
            <sys:Int32>20</sys:Int32>
            <sys:Int32>22</sys:Int32>
            <sys:Int32>24</sys:Int32>
            <sys:Int32>26</sys:Int32>
            <sys:Int32>28</sys:Int32>
            <sys:Int32>36</sys:Int32>
            <sys:Int32>48</sys:Int32>
            <sys:Int32>72</sys:Int32>
        </x:Array>
        <x:Array Type="sys:Double" x:Key="PanelDelays">
            <sys:Double>0.0</sys:Double>
            <sys:Double>0.5</sys:Double>
            <sys:Double>1.0</sys:Double>
            <sys:Double>1.5</sys:Double>
            <sys:Double>2.0</sys:Double>
        </x:Array>

        <net:CheckedToEnableOppsiteConverter x:Key="CheckToEnableOppositeConverter"/>

        <Storyboard x:Key="FadeInOut" x:Shared="False">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3"/>
            <!--<DoubleAnimation Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.3"/>-->
            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Hidden</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation BeginTime="0:0:0.3" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            <!--<DoubleAnimation Storyboard.TargetProperty="Width" From="0" Duration="0:0:0.3"/>-->
        </Storyboard>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Background="{DynamicResource ToolbarBackgrounsBrush}">
            <StackPanel x:Name="navBar" Orientation="Horizontal">
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdGeneralSettings" Margin="1" Padding="2" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_gen}" Margin="2"/>
                        <TextBlock x:Name="cmdGeneral" Text="General settings" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdScheduleSettings" Margin="1" Padding="2" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_sch}" Margin="2"/>
                        <TextBlock x:Name="cmdSchedule" Text="Schedule" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdAppearanceSettings" Margin="1" Padding="2" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_app}" Margin="2"/>
                        <TextBlock x:Name="cmdAppearance" Text="Appearance" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdBehaviorSettings" Margin="1" Padding="2" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_beh}" Margin="2"/>
                        <TextBlock x:Name="cmdBehavior" Text="Behavior" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdNetworkSettings" Margin="1" Padding="2" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_net}" Margin="2"/>
                        <TextBlock x:Name="cmdNetwork" Text="Network" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton Style="{StaticResource OptionButton}" x:Name="cmdProtectionSettings" Margin="1" Padding="2" IsChecked="True" MinHeight="78" Checked="OptionButton_Checked">
                    <StackPanel>
                        <Image Source="{DynamicResource set_pro}" Margin="2"/>
                        <TextBlock x:Name="cmdProtection" Text="Protection" Margin="2" HorizontalAlignment="Center"/>
                    </StackPanel>
                </RadioButton>
            </StackPanel>
        </Border>
        <ScrollViewer Grid.Row="1" x:Name="pnlGeneral" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsLanguage" Header="Language" Margin="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="cboLanguage" Margin="4" SelectionChanged="cboLanguage_SelectionChanged"/>
                            <net:SmallButton x:Name="cmdAddLang" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddLang"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="cmdFontUI" Header="Font of windows and menus" Grid.Column="1" Margin="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Margin="4" Height="{Binding Path=ActualHeight, ElementName=cboLanguage}" Command="net:SettingsCommands.ChangeFontCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <Button Grid.Column="1" Margin="4" Height="{Binding Path=ActualHeight, ElementName=cboLanguage}" Command="net:SettingsCommands.RestoreFontCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
                <GroupBox x:Name="pnsStartup" Header="Startup options" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkRunOnStart" Content="Run on system start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkNoSplash" Content="Do not show splash screen on program start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkShowCPOnStart" Content="Show Control Panel on program start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkShowPriority" Content="Always show notes marked as 'High Priority' on program start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpUpdate" Header="Update options" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkCheckNewVersionOnStart" Content="Check for new version on program start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <Button MinHeight="23" MinWidth="75" Padding="8,0,8,0" Margin="24,4,4,4" HorizontalAlignment="Left" Command="net:SettingsCommands.CheckUpdateCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        <CheckBox x:Name="chkCheckCriticalOnStart" Content="Check for critical updates on program start" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkCheckCriticalPeriodically" Content="Check for critical updates during program's work" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsAppearance" Header="Appearance" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkHideToolbar" Content="Hide note's toolbar" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkCustomFont" Content="Use custom fonts" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkHideDelete" Content="Hide 'Delete' button" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkChangeHideToDelete" Content="Change appearance of 'Hide' button to 'Delete' button" Margin="24,4,4,4" IsEnabled="{Binding Path=IsChecked, ElementName=chkHideDelete}" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkHideHide" Content="Hide 'Hide' button" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="chkShowScrollbar" Grid.Column="0" Text="Show scrollbars" Margin="4" VerticalAlignment="Center" IsEnabled="{Binding Path=IsChecked, ElementName=chkAutoHeight, Converter={StaticResource CheckToEnableOppositeConverter}}"/>
                            <ComboBox x:Name="cboScrollBars" Grid.Column="1" Margin="4" HorizontalAlignment="Right" MinWidth="300" IsEnabled="{Binding Path=IsChecked, ElementName=chkAutoHeight, Converter={StaticResource CheckToEnableOppositeConverter}}" SelectionChanged="cboScrollBars_SelectionChanged"/>
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsSkinlessGeneral" Header="Skinless notes" Margin="4">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <pnNumericUpDown:NumericUpDown x:Name="txtWidthSknlsDef" MinValue="100" MaxValue="999" MinWidth="72" Margin="4" IsReadOnly="False" ValueChanged="txtWidthSknlsDef_ValueChanged"/>
                            <TextBlock x:Name="lblWidthSknlsDef" Text="Width" Grid.Row="0" Grid.Column="1" Margin="4" VerticalAlignment="Center"/>
                            <pnNumericUpDown:NumericUpDown x:Name="txtHeightSknlsDef" Grid.Row="1" Grid.Column="0" MinValue="72" MaxValue="999" MinWidth="72" Margin="4" IsReadOnly="False" ValueChanged="txtHeightSknlsDef_ValueChanged"/>
                            <TextBlock x:Name="lblHeightSknlsDef" Text="Height" Grid.Row="1" Grid.Column="1" Margin="4" VerticalAlignment="Center"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblButtonsSize" Text="Toolbar buttons size" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                            <ComboBox x:Name="cboButtonsSize" Grid.Column="1" MinWidth="150" HorizontalAlignment="Right" Margin="4" SelectionChanged="cboButtonsSize_SelectionChanged"/>
                        </Grid>
                        <CheckBox x:Name="chkAutoHeight" Content="Automatically adjust note's height depending on it's content" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsEditArea" Header="Edit area" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="lblIndent" Text="Bullets indent (in twips) ( * )" ToolTip="{Binding Text, ElementName=lblWarn1}" Grid.Row="0" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="cboIndent" Grid.Row="0" Grid.Column="1" Margin="4" ToolTip="{Binding Text, ElementName=lblWarn1}" HorizontalAlignment="Right" MinWidth="80" ItemsSource="{StaticResource Indents}" SelectionChanged="cboIndent_SelectionChanged"/>
                        <TextBlock x:Name="lblMargins" Text="Left and right margin width - for skinless notes" Grid.Row="1" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="cboMargins" Grid.Row="1" Grid.Column="1" Margin="4" HorizontalAlignment="Right" MinWidth="80" ItemsSource="{StaticResource Margins}" SelectionChanged="cboMargins_SelectionChanged"/>
                        <TextBlock x:Name="lblParIndent" Text="Step of paragraph indent's increasing/decreasing (in twips)" Grid.Row="2" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="cboParIndent" Grid.Row="2" Grid.Column="1" Margin="4" HorizontalAlignment="Right" MinWidth="80" ItemsSource="{StaticResource Pars}" SelectionChanged="cboParIndent_SelectionChanged"/>
                        <TextBlock x:Name="lblSpellColor" Text="Underlining color of spell checker" Grid.Row="3" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <pnColorPicker:ColorPicker x:Name="pckSpell" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" Margin="4" MinWidth="80" SelectedColor="Red" SelectedColorChanged="pckSpell_SelectedColorChanged"/>
                        <CheckBox x:Name="chkAutomaticSmilies" Content="Automatically insert smilies while typing ':)' or ':('" Grid.Row="4" Grid.Column="0" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <TextBlock x:Name="lblParagraphSpace" Text="Points to be applied when user choses to add space before/after paragraph" Grid.Row="5" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <pnNumericUpDown:NumericUpDown x:Name="updSpace" MaxValue="1584" Grid.Row="5" Grid.Column="1" Margin="4" HorizontalAlignment="Right" MinWidth="80" IsReadOnly="False" ValueChanged="updSpace_ValueChanged"/>
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="pnsSaveDelete" Header="Saving/Deletion" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <CheckBox x:Name="chkSaveOnExit" Content="Save all on program exit" Grid.Row="0" Grid.Column="0" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkConfirmSave" Content="Confirm saving" Grid.Row="1" Grid.Column="0" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkConfirmDelete" Content="Confirmation before note deletion" Grid.Row="2" Grid.Column="0" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkSaveWithoutConfirm" Content="Save notes without confirmation while hiding" Grid.Row="3" Grid.Column="0" Margin="4" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkAutosave" Content="Autosave every (minutes):" Grid.Row="4" Grid.Column="0" Margin="4" VerticalAlignment="Center" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <pnNumericUpDown:NumericUpDown x:Name="updAutosave" MinValue="1" MaxValue="99" IsReadOnly="False" Grid.Row="4" Grid.Column="1" Margin="4" HorizontalAlignment="Right" MinWidth="80" IsEnabled="{Binding Path=IsChecked, ElementName=chkAutosave}" ValueChanged="updAutosave_ValueChanged"/>
                        <CheckBox x:Name="chkRestoreAutomatically" Content="Restore auto-saved notes automatically" Grid.Row="5" Grid.Column="0" Margin="24,4,4,4" VerticalAlignment="Center" IsEnabled="{Binding Path=IsChecked, ElementName=chkAutosave}" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <TextBlock x:Name="lblDeleBin" Text="Delete note from Recycle Bin after selected period (days)" Grid.Row="6" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <ComboBox x:Name="cboDeleteBin" Grid.Row="6" Grid.Column="1" Margin="4" MinWidth="80" HorizontalAlignment="Right" SelectionChanged="cboDeleteBin_SelectionChanged"/>
                        <CheckBox x:Name="chkWarnBeforeEmptyBin" Content="Warn when note is deleted automatically from Recycle Bin" Grid.Row="7" Grid.Column="0" Margin="24,4,4,4" VerticalAlignment="Center" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkDeleteShortExit" Content="Delete desktop shortcuts on program exit" Grid.Row="8" Grid.Column="0" Margin="4" VerticalAlignment="Center" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkRestoreShortStart" Content="Restore desktop shortcuts on program start" Grid.Row="9" Grid.Column="0" Margin="24,4,4,4" IsEnabled="{Binding IsChecked, ElementName=chkDeleteShortExit}" VerticalAlignment="Center" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                        <CheckBox x:Name="chkCloseOnShortcut" Content="Close note after desktop shortcut creation" Grid.Row="10" Grid.Column="0" Margin="4" VerticalAlignment="Center" Checked="CheckGeneral_Checked" Unchecked="CheckGeneral_Checked"/>
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="pnsDTFormat" Header="Date/Time formats" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="lblDTFormat" Text="Date format" Grid.Row="0" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right">
                            <TextBox x:Name="txtDTFShort" MinWidth="200" Margin="4" TextAlignment="Center" VerticalAlignment="Center" TextChanged="txtDTFShort_TextChanged" PreviewKeyDown="txtDTFShort_PreviewKeyDown"/>
                            <Button Padding="8,0,8,0" Margin="0,4,4,4" Command="net:CommonCommands.QuestionCommand" CommandParameter="cmdDTFShort" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        </StackPanel>
                        <TextBlock x:Name="lblDTSample" Text="Date sample" Grid.Row="1" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <Border BorderBrush="{DynamicResource CommonControlBorderBrush}" Height="{Binding Path=ActualHeight, ElementName=txtDTFShort, Mode=OneWay}" BorderThickness="1" Grid.Row="1" Grid.Column="2" Margin="4">
                            <TextBlock x:Name="lblDTShort" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>

                        <TextBlock x:Name="lblTFormat" Text="Time format" Grid.Row="2" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right">
                            <TextBox x:Name="txtTFLong" MinWidth="200" Margin="4" TextAlignment="Center" VerticalAlignment="Center" TextChanged="txtTFLong_TextChanged" PreviewKeyDown="txtTFLong_PreviewKeyDown"/>
                            <Button Padding="8,0,8,0" Margin="0,4,4,4" Command="net:CommonCommands.QuestionCommand" CommandParameter="cmdTFLong" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        </StackPanel>
                        <TextBlock x:Name="lblTSample" Text="Time sample" Grid.Row="3" Grid.Column="0" Margin="4" VerticalAlignment="Center"/>
                        <Border BorderBrush="{DynamicResource CommonControlBorderBrush}" Height="{Binding Path=ActualHeight, ElementName=txtTFLong, Mode=OneWay}" BorderThickness="1" Grid.Row="3" Grid.Column="2" Margin="4">
                            <TextBlock x:Name="lblTFLong" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="pnsMiscMisc" Header="Miscellaneous" Margin="4">
                    <TabControl x:Name="tabMisc" Margin="4">
                        <TabItem x:Name="lblSearchProvs" Header="Search providers">
                            <Grid Height="120">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ListView x:Name="grdSearchProvs" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true" Grid.Row="0" Margin="4,4,4,0" SelectionMode="Single" MouseDoubleClick="grdSearchProvs_MouseDoubleClick">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="SP_Name" Header="Name" Width="180" DisplayMemberBinding="{Binding Name}"/>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="SP_Query_Line" Header="Query line" Width="300" DisplayMemberBinding="{Binding Query}"/>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Margin="4,0,4,4">
                                    <StackPanel Orientation="Horizontal">
                                        <net:SmallButton x:Name="cmdAddProv" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddProv"/>
                                        <net:SmallButton x:Name="cmdEditProv" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditProv"/>
                                        <net:SmallButton x:Name="cmdDeleteProv" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteProv"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="lblExternals" Header="External programs">
                            <Grid Height="120">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ListView x:Name="grdExternals" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true" Grid.Row="0" Margin="4,4,4,0" SelectionMode="Single" MouseDoubleClick="grdExternals_MouseDoubleClick">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Ext_Name" Header="Name" Width="140" DisplayMemberBinding="{Binding Name}"/>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Ext_Program" Header="Program" Width="180" DisplayMemberBinding="{Binding Prog}"/>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Ext_Command_Line" Header="Command line" Width="180" DisplayMemberBinding="{Binding CommLine}"/>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Margin="4,0,4,4">
                                    <StackPanel Orientation="Horizontal">
                                        <net:SmallButton x:Name="cmdAddExt" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddExt"/>
                                        <net:SmallButton x:Name="cmdEditExt" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditExt"/>
                                        <net:SmallButton x:Name="cmdDeleteExt" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteExt"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="lblPreTags" Header="Predefined tags">
                            <Grid Height="120">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.5*"/>
                                    <ColumnDefinition Width="0.5*"/>
                                </Grid.ColumnDefinitions>
                                <ListBox x:Name="lstTags" Grid.Row="0" Grid.Column="0" Margin="4"/>
                                <StackPanel Grid.Row="0" Grid.Column="1">
                                    <TextBlock x:Name="lblTag" Text="Tag" Margin="4"/>
                                    <TextBox x:Name="txtTag" Margin="4"/>
                                </StackPanel>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="4,0,4,4">
                                    <StackPanel Orientation="Horizontal">
                                        <net:SmallButton x:Name="cmdAddTag" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddTag"/>
                                        <net:SmallButton x:Name="cmdDeleteTag" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteTag"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Row="1" x:Name="pnlSchedule" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsConduct" Grid.Column="0" Header="Conduct" Margin="4">
                        <StackPanel>
                            <CheckBox x:Name="chkAllowSound" Content="Allow sound alert" Margin="4" Checked="CheckSchedule_Checked" Unchecked="CheckSchedule_Checked"/>
                            <CheckBox x:Name="chkTrackOverdue" Content="Track overdue reminders" Margin="4" Checked="CheckSchedule_Checked" Unchecked="CheckSchedule_Checked"/>
                            <CheckBox x:Name="chkVisualNotify" Content="Enable visual notification" Margin="4" Checked="CheckSchedule_Checked" Unchecked="CheckSchedule_Checked"/>
                            <CheckBox x:Name="chkCenterScreen" Content="Move notes to the center of screen" Margin="4" Checked="CheckSchedule_Checked" Unchecked="CheckSchedule_Checked"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="grpDOW" Grid.Column="1" Header="First day of week" Margin="4">
                        <StackPanel>
                            <RadioButton x:Name="optDOWStandard" Content="Accordingly to language settings" Margin="4" Checked="OptionDowChecked" Unchecked="OptionDowChecked"/>
                            <RadioButton x:Name="optDOWCustom" Content="User-defined" Margin="4" Checked="OptionDowChecked" Unchecked="OptionDowChecked"/>
                            <ComboBox x:Name="cboDOW" Margin="24,4,4,4" IsEnabled="{Binding IsChecked, ElementName=optDOWCustom}" SelectionChanged="cboDOW_SelectionChanged"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
                <GroupBox x:Name="pnsSounds" Header="Sound alert" Margin="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="clbSounds" Grid.Row="0" Grid.Column="0" Margin="4,4,4,0" Width="220" Height="120" HorizontalAlignment="Left" SelectionChanged="clbSounds_SelectionChanged"/>
                        <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Grid.Column="0" Margin="4,0,4,4" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, ElementName=clbSounds}">
                            <StackPanel Orientation="Horizontal">
                                <net:SmallButton x:Name="cmdAddSound" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddSound"/>
                                <net:SmallButton x:Name="cmdRemoveSound" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdRemoveSound"/>
                                <net:SmallButton x:Name="cmdListenSound" net:PNUtils.SmallButtonType="Run" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdListenSound"/>
                            </StackPanel>
                        </Border>
                        <StackPanel Grid.Row="0" Grid.Column="1">
                            <TextBlock Name="lblStopAlert" Text="Stop alert/notification after:" Margin="4"/>
                            <ComboBox Name="cboStopAlert" HorizontalAlignment="Stretch" Margin="4" SelectionChanged="CboStopAlert_SelectionChanged"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsVoices" Header="Available voices" Grid.Column="0" Margin="4">
                        <ListBox x:Name="lstVoices" Margin="4" Width="{Binding Path=ActualWidth, ElementName=clbSounds}" Height="140"/>
                    </GroupBox>
                    <GroupBox x:Name="pnsTTS" Header="Text-to-speech settings" Grid.Column="1" Margin="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>

                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Row="0" Grid.Column="0" Margin="4" Command="net:SettingsCommands.DefaultVoiceCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <Button Grid.Row="0" Grid.Column="1" Margin="4" Command="net:SettingsCommands.VoiceSampleCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <TextBlock x:Name="lblVoiceSample" Text="Enter sample text:" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="4"/>
                            <TextBox x:Name="txtVoiceSample" Grid.Row="1" Grid.Column="1" Margin="4" VerticalAlignment="Center"/>
                            <TextBlock x:Name="lblVolume" Text="Volume" Grid.Row="2" Grid.Column="0" Margin="4"/>
                            <Grid Grid.Row="2" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="0%" Grid.Column="0" Margin="4" HorizontalAlignment="Right" Width="{Binding Path=ActualWidth, ElementName=tb1}"/>
                                <Slider x:Name="trkVolume" Grid.Column="1" TickFrequency="10" SmallChange="1" LargeChange="10" Maximum="100" TickPlacement="BottomRight" IsSelectionRangeEnabled="True" Margin="4" ValueChanged="trkVolume_ValueChanged"/>
                                <TextBlock x:Name="tb2" Text="100%" Grid.Column="2" Margin="4" HorizontalAlignment="Left"/>
                            </Grid>
                            <TextBlock x:Name="lblSpeed" Text="Speed" Grid.Row="3" Grid.Column="0" Margin="4"/>
                            <Grid Grid.Row="3" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="tb1" Text="-10" Grid.Column="0" Margin="4" HorizontalAlignment="Right"/>
                                <Slider x:Name="trkSpeed" Grid.Column="1" TickFrequency="1" SmallChange="1" LargeChange="1" Minimum="-10" Maximum="10" TickPlacement="BottomRight" IsSelectionRangeEnabled="True" Margin="4" ValueChanged="trkSpeed_ValueChanged"/>
                                <TextBlock Text="+10" Grid.Column="2" Margin="4" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, ElementName=tb2}"/>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Row="1" x:Name="pnlAppearance" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <GroupBox x:Name="pnsInterface" Header="User interface" Margin="4">
                    <StackPanel>
                        <RadioButton x:Name="optSkinless" Content="Skinless" Margin="4" Checked="OptionAppearance_Checked" Unchecked="OptionAppearance_Checked"/>
                        <RadioButton x:Name="optSkinnable" Content="Skinnable" Margin="4" Checked="OptionAppearance_Checked" Unchecked="OptionAppearance_Checked"/>
                        <GroupBox x:Name="grpThemes" Header="Color themes ( *** )" ToolTip="{Binding Text, ElementName=lblWarn2}" Margin="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ListBox x:Name="lstThemes" Grid.Column="0" Margin="4" SelectionChanged="lstThemes_SelectionChanged"/>
                                <net:SmallButton x:Name="cmdAddTheme" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddTheme"/>
                                <Border Grid.Column="2">
                                    <Image x:Name="imgTheme" Stretch="None" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition Width="0.7*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsGroups" Header="Groups" Grid.Column="0" Margin="4">
                        <!--have to set height hard-coded, otherwise tree view stretches itself to show all items-->
                        <net:PNTreeView x:Name="tvwGroups" Margin="4" Height="346" SelectedItemChanged="tvwGroups_SelectedItemChanged" />
                    </GroupBox>
                    <GroupBox x:Name="pnsGroupSettings" Header="Settings" Grid.Column="1" Margin="4">
                        <Grid x:Name="gridGroupsSettings">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="cmdChangeFont" Text="Change font ( * )" ToolTip="{Binding Text, ElementName=lblWarn1}" Grid.Row="0" Margin="4"/>
                            <ComboBox x:Name="cboFonts" Grid.Row="1" ToolTip="{Binding Text, ElementName=lblWarn1}" Margin="4" SelectionChanged="cboFonts_SelectionChanged"/>
                            <Grid Grid.Row="2" HorizontalAlignment="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Margin="4" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalContentAlignment="Stretch" Command="net:GroupViewCommands.GroupIcontCommand">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="imgGroupIcon" Grid.Column="0" Stretch="None" Source="{DynamicResource folder}"/>
                                        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Path=Command.Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                    </Grid>
                                </Button>
                                <TextBlock x:Name="tbFontColor" Grid.Row="1" Grid.Column="0" Text="Font color" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"/>
                                <ComboBox x:Name="cboFontColor" Grid.Row="1" Grid.Column="1" Margin="4" Width="72" SelectionChanged="cboColor_SelectionChanged">
                                    <ComboBox.Items>
                                        <Rectangle Fill="Black" Height="16"/>
                                        <Rectangle Fill="Navy" Height="16"/>
                                        <Rectangle Fill="Green" Height="16"/>
                                        <Rectangle Fill="Teal" Height="16"/>
                                        <Rectangle Fill="Maroon" Height="16"/>
                                        <Rectangle Fill="Purple" Height="16"/>
                                        <Rectangle Fill="Olive" Height="16"/>
                                        <Rectangle Fill="Silver" Height="16"/>
                                        <Rectangle Fill="Gray" Height="16"/>
                                        <Rectangle Fill="Blue" Height="16"/>
                                        <Rectangle Fill="Lime" Height="16"/>
                                        <Rectangle Fill="Cyan" Height="16"/>
                                        <Rectangle Fill="Red" Height="16"/>
                                        <Rectangle Fill="Magenta" Height="16"/>
                                        <Rectangle Fill="Yellow" Height="16"/>
                                        <Rectangle Fill="White" Height="16"/>
                                    </ComboBox.Items>
                                </ComboBox>
                                <TextBlock x:Name="tbFontSize" Grid.Row="1" Grid.Column="2" Text="Font size" Margin="4" VerticalAlignment="Center"/>
                                <ComboBox x:Name="cboFontSize" Grid.Row="1" Grid.Column="3" Margin="4" ItemsSource="{StaticResource Sizes}" Width="72" SelectionChanged="cboFontSize_SelectionChanged"/>
                            </Grid>
                            <TabControl x:Name="tabGroups" Grid.Row="3" Margin="4">
                                <TabItem x:Name="tbpSkinless" Header="Skinless notes">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <net:PNSkinlessPreview x:Name="pvwSkl" VerticalAlignment="Top" Margin="4" Width="120" Height="120"/>
                                        <StackPanel Grid.Column="1">
                                            <TextBlock x:Name="lblBackSknls" Text="Background" Margin="4"/>
                                            <pnColorPicker:ColorPicker x:Name="pckBGSknls" Margin="4" SelectedColorChanged="pckBGSknls_SelectedColorChanged"/>
                                            <Button Margin="4" Command="net:GroupViewCommands.SkinlessCaptionFontCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="tbpSkinnable" Header="Skinnable notes">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="brdSkin" Grid.Column="0" BorderThickness="1" VerticalAlignment="Top" Margin="4" Width="120" Height="120">
                                            <!--<Canvas>
                                                <Image x:Name="imgSkin" Margin="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                            </Canvas>-->
                                            <net:PNSkinPreview x:Name="pvwSkin" Margin="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                        </Border>
                                        <TextBlock x:Name="lblMoreSkins" Text="Get more skins" Grid.Column="1" HorizontalAlignment="Center" TextDecorations="Underline" Cursor="Hand" Foreground="{DynamicResource LinkBrush}" MouseLeftButtonDown="lblMoreSkins_MouseLeftButtonDown"/>
                                        <ListBox x:Name="lstSkins" Grid.Column="2" Margin="4" Width="120" Height="120" VerticalAlignment="Top" SelectionChanged="lstSkins_SelectionChanged"/>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                            <Button Grid.Row="4" Margin="4" Command="net:GroupViewCommands.StandardViewCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsDiaryCust" Header="Miscellaneous (Diary)" Grid.Column="0" Margin="4">
                        <StackPanel x:Name="stkDiaryCust">
                            <CheckBox x:Name="chkAddWeekdayName" Content="Add weekday name to note's name" Margin="4" Checked="CheckAppearance_Checked" Unchecked="CheckAppearance_Checked"/>
                            <CheckBox x:Name="chkFullWeekdayName" Content="Full weekday name" Margin="24,4,4,4" Checked="CheckAppearance_Checked" Unchecked="CheckAppearance_Checked"/>
                            <CheckBox x:Name="chkWeekdayAtTheEnd" Content="Add weekday name at the end of note's name" Margin="24,4,4,4" Checked="CheckAppearance_Checked" Unchecked="CheckAppearance_Checked"/>
                            <CheckBox x:Name="chkNoPreviousDiary" Content="Do not show diary 'pages' from previous dates in 'Diary' menu" Margin="4" Checked="CheckAppearance_Checked" Unchecked="CheckAppearance_Checked"/>
                            <CheckBox x:Name="chkDiaryAscOrder" Content="Ascending sort of 'pages' in 'Diary' menu (starting from earliest)" Margin="4" Checked="CheckAppearance_Checked" Unchecked="CheckAppearance_Checked"/>
                            <TextBlock x:Name="lblNumberOfDiaries" sts:Utils.CatchDisabledState="True" Text="Number of diary 'pages' shown in 'Diary' menu" Margin="4"/>
                            <ComboBox x:Name="cboNumberOfDiaries" Margin="4" ItemsSource="{StaticResource Days}" Width="70" HorizontalAlignment="Left"  SelectionChanged="cboNumberOfDiaries_SelectionChanged"/>
                            <TextBlock x:Name="lblDiaryNaming" sts:Utils.CatchDisabledState="True" Text="Date format used for naming of notes belong to 'Diary' group" Margin="4"/>
                            <ComboBox x:Name="cboDiaryNaming" Margin="4" ItemsSource="{StaticResource Formats}" SelectionChanged="cboDiaryNaming_SelectionChanged"/>
                            <TextBlock x:Name="lblDiaryExample" sts:Utils.CatchDisabledState="True" Margin="4"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="pnsMiscDocking" Header="Miscellaneous (Docking)" Grid.Column="1" Margin="4">
                        <StackPanel x:Name="stkDockCust">
                            <TextBlock x:Name="lblDockWidth" sts:Utils.CatchDisabledState="True" Text="Width" Margin="4"/>
                            <pnNumericUpDown:NumericUpDown x:Name="txtDockWidth" MinValue="100" MaxValue="999" Width="72" Margin="4" IsReadOnly="False" HorizontalAlignment="Left" ValueChanged="txtDockWidth_ValueChanged"/>
                            <TextBlock x:Name="lblDockHeight" sts:Utils.CatchDisabledState="True" Text="Height" Margin="4"/>
                            <pnNumericUpDown:NumericUpDown x:Name="txtDockHeight" MinValue="100" MaxValue="999" Width="72" Margin="4" IsReadOnly="False" HorizontalAlignment="Left" ValueChanged="txtDockHeight_ValueChanged"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Row="1" x:Name="pnlBehavior" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox x:Name="pnsHotkeys" Header="Hot keys" Grid.Column="0" Margin="4">
                        <Button Margin="4" Command="net:SettingsCommands.HotkeysCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    </GroupBox>
                    <GroupBox x:Name="pnsMenus" Header="Menus" Grid.Column="1" Margin="4">
                        <Button Margin="4" Command="net:SettingsCommands.MenusManagementCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    </GroupBox>
                </Grid>
                <GroupBox x:Name="pnsSkinless" Header="Skinless notes" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkRandBack" Content="Use random background color" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkInvertText" Content="Invert text color" Margin="24,4,4,4" IsEnabled="{Binding Path=IsChecked, ElementName=chkRandBack}" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkRoll" Content="Roll/unroll note by double click on caption" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkFitRolled" Content="Fit to caption when rolled" Margin="24,4,4,4" IsEnabled="{Binding Path=IsChecked, ElementName=chkRoll}" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsBehaviorMisc" Header="Miscellaneous" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkNewOnTop" Content="New note always on top" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkRelationalPosition" Content="Relational notes positioning" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkShowSeparateNotes" Content="Show separate notes under each group in Show/Hide menus" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkHideCompleted" Content="Hide notes marked as 'Completed'" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkShowBigIcons" Content="Show big icons on PNotes Control Panel's toolbar" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkDontShowList" Content="Do not show notes in the list of opened windows (Alt+Tab) ( * )" ToolTip="{Binding Text, ElementName=lblWarn1}" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkHideMainWindow" Content="Do not show main program window in the list of opened windows (Alt+Tab) ( *** )" ToolTip="{Binding Text, ElementName=lblWarn2}" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkKeepVisibleOnShowdesktop" Content="Keep notes visible while hovering over 'Show Desktop' button ( ** )" ToolTip="{Binding Text, ElementName=lblWarn3}" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkPreventResizing" Content="Prevent notes from being automatically arranged when moved to the edge of the screen ( ** )" ToolTip="{Binding Text, ElementName=lblWarn3}" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblDblAction" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Action after double click on system tray icon" Margin="4"/>
                            <TextBlock x:Name="lblSingleAction" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Action after single click on system tray icon" Margin="4"/>
                            <TextBlock x:Name="lblDefName" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="Use following as default name of new note" Margin="4"/>
                            <TextBlock x:Name="lblLengthOfName" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Text="Length of note's text used as default name for new note" Margin="4"/>
                            <TextBlock x:Name="lblLengthOfContent" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Text="Length of note's text shown in 'Content' column at Control Panel" Margin="4"/>
                            <TextBlock x:Name="lblPinClick" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Text="Action after click on 'Pin' icon" Margin="4"/>
                            <TextBlock x:Name="lblNoteStartPosition" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Text="New note initial position" Margin="4"/>
                            <ComboBox x:Name="cboDblAction" Grid.Row="0" Grid.Column="1" Margin="4" SelectionChanged="cboDblAction_SelectionChanged"/>
                            <ComboBox x:Name="cboSingleAction" Grid.Row="1" Grid.Column="1" Margin="4" SelectionChanged="cboSingleAction_SelectionChanged"/>
                            <ComboBox x:Name="cboDefName" Grid.Row="2" Grid.Column="1" Margin="4" SelectionChanged="cboDefName_SelectionChanged"/>
                            <ComboBox x:Name="cboLengthOfName" Grid.Row="3" Grid.Column="1" Margin="4" Width="82" HorizontalAlignment="Right" SelectionChanged="cboLengthOfName_SelectionChanged"/>
                            <ComboBox x:Name="cboLengthOfContent" Grid.Row="4" Grid.Column="1" Margin="4" Width="82" HorizontalAlignment="Right" SelectionChanged="cboLengthOfContent_SelectionChanged"/>
                            <ComboBox x:Name="cboPinClick" Grid.Row="5" Grid.Column="1" Margin="4" SelectionChanged="cboPinClick_SelectionChanged"/>
                            <ComboBox x:Name="cboNoteStartPosition" Grid.Row="6" Grid.Column="1" Margin="4" SelectionChanged="cboNoteStartPosition_SelectionChanged"/>
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpDockPanel" Header="Notes panel" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkShowPanel" Content="Show notes panel" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <Grid IsEnabled="{Binding IsChecked, ElementName=chkShowPanel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblPanelDock" sts:Utils.CatchDisabledState="True" Text="Panel placement" Margin="24,4,4,4" VerticalAlignment="Center"/>
                            <ComboBox x:Name="cboPanelDock" Grid.Column="1" Margin="4" HorizontalAlignment="Right" Width="{Binding ActualWidth, ElementName=cboNoteStartPosition}" SelectionChanged="cboPanelDock_SelectionChanged"/>
                        </Grid>
                        <CheckBox x:Name="chkPanelAutoHide" Content="Hide notes panel automatically" IsEnabled="{Binding IsChecked, ElementName=chkShowPanel}" Margin="24,4,4,4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkPanelSwitchOffAnimation" Content="Switch off animation" IsEnabled="{Binding IsChecked, ElementName=chkShowPanel}" Margin="24,4,4,4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <Grid IsEnabled="{Binding IsChecked, ElementName=chkShowPanel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblPanelRemove" sts:Utils.CatchDisabledState="True" Text="Action to remove note from panel" Margin="24,4,4,4" VerticalAlignment="Center"/>
                            <ComboBox x:Name="cboPanelRemove" Grid.Column="1" Margin="4" HorizontalAlignment="Right" Width="{Binding ActualWidth, ElementName=cboNoteStartPosition}" SelectionChanged="cboPanelRemove_SelectionChanged"/>
                        </Grid>
                        <Grid IsEnabled="{Binding IsChecked, ElementName=chkShowPanel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="tbPanelDelay" sts:Utils.CatchDisabledState="True" Text="Delay of automatic panel appearance (in seconds)" Margin="24,4,4,4" VerticalAlignment="Center"/>
                            <ComboBox x:Name="cboPanelDelay" Grid.Column="1" Margin="4" HorizontalAlignment="Right" Width="82" SelectionChanged="cboPanelDelay_SelectionChanged" ItemsSource="{StaticResource PanelDelays}"/>
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsEffects" Header="Effects" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkHideFluently" Content="Hide notes fluently" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <CheckBox x:Name="chkPlaySoundOnHide" Content="Play sound when hide note" Margin="4" Checked="CheckBehavior_Checked" Unchecked="CheckBehavior_Checked"/>
                        <GroupBox x:Name="grpTransparency" Header="Transparency" Margin="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="lblTransPerc" Text="0%" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center"/>
                                <TextBlock Text="0%" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="4" VerticalAlignment="Center"/>
                                <Slider x:Name="trkTrans" Grid.Row="1" Grid.Column="1" Margin="4" TickPlacement="BottomRight" ValueChanged="trkTrans_ValueChanged" SmallChange="1" Maximum="100"/>
                                <TextBlock Text="100%" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"/>
                                <TextBlock x:Name="lblTransWarning" Text="Value of 100% will result in fully transparent window!" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" Margin="4" Foreground="{DynamicResource WarningTextBrush}" TextWrapping="Wrap"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Row="1" x:Name="pnlNetwork" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <GroupBox x:Name="pnsExchange" Header="Notes exchange" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkEnableExchange" Content="Enable exchange" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                        <StackPanel IsEnabled="{Binding Path=IsChecked, ElementName=chkEnableExchange}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="lblExchPort" sts:Utils.CatchDisabledState="True" Grid.Row="0" Grid.Column="0" Text="Port" VerticalAlignment="Center" Margin="4"/>
                                <pnNumericUpDown:NumericUpDown x:Name="txtExchPort" Grid.Row="0" Grid.Column="1" UseGroupSeparator="False" IsReadOnly="False" MaxValue="65535" MinValue="1" Margin="4" MinWidth="80" HorizontalAlignment="Right" ValueChanged="txtExchPort_ValueChanged"/>
                                <TextBlock x:Name="tbSendTimeout" sts:Utils.CatchDisabledState="True" Margin="4" Grid.Row="1" Grid.Column="0" Text="Max timeout for sending note and processing it on recipients's side (seconds)" VerticalAlignment="Center"/>
                                <pnNumericUpDown:NumericUpDown x:Name="updTimeout" Grid.Row="1" Grid.Column="1" Margin="4" IsReadOnly="False" MaxValue="600" MinValue="1" MinWidth="80" HorizontalAlignment="Right" UseGroupSeparator="False" ValueChanged="updTimeout_ValueChanged"/>
                            </Grid>
                            <CheckBox x:Name="chkAllowPing" Content="Allow checking of connection with contact's computer (ping)" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkSaveBeforeSending" Content="Save note before sending" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkNoNotifyOnArrive" Content="Do not show notification when new note arrives" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkShowRecOnClick" Content="Show received note after click on notification message" Margin="24,4,4,4" IsEnabled="{Binding Path=IsChecked, ElementName=chkNoNotifyOnArrive, Converter={StaticResource CheckToEnableOppositeConverter}}" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkShowIncomingOnClick" Content="Show 'Incoming' group after click on notification message" Margin="24,4,4,4" IsEnabled="{Binding Path=IsChecked, ElementName=chkNoNotifyOnArrive, Converter={StaticResource CheckToEnableOppositeConverter}}" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkNoSoundOnArrive" Content="Do not play sound when new note arrives" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkNoNotifyOnSend" Content="Do not show notification when note is sending" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkShowAfterReceiving" Content="Show note after receiving" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkRecOnTop" Content="Received note always on top" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkHideAfterSending" Content="Hide note after sending" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkNoContInContextMenu" Content="Do not show contacts in context menu" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CheckBox x:Name="chkStoreOnserver" Grid.Column="0" Content="Store undelivered notes on server" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                                <TextBlock x:Name="tbStoreOnserver" sts:Utils.CatchDisabledState="True" Margin="4" Grid.Column="1" VerticalAlignment="Center" Text="(requires PNExchangeService installation on local network)" Foreground="{DynamicResource WarningTextBrush}"/>
                            </Grid>
                            <Grid IsEnabled="{Binding IsChecked, ElementName=chkStoreOnserver}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Row="0" Grid.Column="0">
                                    <TextBlock x:Name="tbServerIp" sts:Utils.CatchDisabledState="True" Text="Server IP address" HorizontalAlignment="Left" Margin="24,4,4,4"/>
                                    <pnIp:IpBox x:Name="ipServer" HorizontalAlignment="Left" Margin="24,4,4,4" Width="160" FieldChanged="ipServer_FieldChanged"/>
                                </StackPanel>
                                <StackPanel Grid.Row="0" Grid.Column="1">
                                    <TextBlock x:Name="tbServerPort" sts:Utils.CatchDisabledState="True" Text="Server port" Margin="24,4,4,4"/>
                                    <pnNumericUpDown:NumericUpDown x:Name="txtServerPort" HorizontalAlignment="Left" Margin="24,4,4,4" MinWidth="80" MaxValue="65535" IsReadOnly="False" UseGroupSeparator="False" ValueChanged="txtServerPort_ValueChanged"/>
                                </StackPanel>
                                <Button Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Margin="24,4,4,4" Command="net:SettingsCommands.CheckConnectionCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}">
                                    <Button.IsEnabled>
                                        <MultiBinding Converter="{StaticResource ConnectionCheckConverter}">
                                            <Binding Path="IsEnabled" ElementName="ipServer"/>
                                            <Binding Path="Value" ElementName="txtServerPort"/>
                                            <Binding Path="IsAnyBlank" ElementName="ipServer"/>
                                        </MultiBinding>
                                    </Button.IsEnabled>
                                </Button>
                                <Ellipse x:Name="elpCheckConnection" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Width="48" Height="48" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Left" StrokeThickness="7" StrokeDashArray="3.3 1.3" Visibility="Hidden" Style="{StaticResource ProgressImage}"/>
                                <Button Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" Margin="24,4,4,4" Command="net:SettingsCommands.CheckMessagesCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}">
                                    <Button.IsEnabled>
                                        <MultiBinding Converter="{StaticResource ConnectionCheckConverter}">
                                            <Binding Path="IsEnabled" ElementName="ipServer"/>
                                            <Binding Path="Value" ElementName="txtServerPort"/>
                                            <Binding Path="IsAnyBlank" ElementName="ipServer"/>
                                        </MultiBinding>
                                    </Button.IsEnabled>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <TabControl x:Name="tabNetwork" Margin="4">
                    <TabItem x:Name="pnsContacts" Header="Contacts details">
                        <StackPanel IsEnabled="{Binding Path=IsChecked, ElementName=chkEnableExchange}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="lblGroups" Text="Groups" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="4"/>
                                <net:PNTreeView x:Name="tvwContactsGroups" Grid.Row="1" Grid.Column="0" Margin="4,4,0,4" Width="194" Height="164" HorizontalAlignment="Left" PNTreeViewLeftMouseDoubleClick="tvwContactsGroups_MouseDoubleClick"/>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Grid.Column="1" Margin="0,4,4,4">
                                    <StackPanel>
                                        <net:SmallButton x:Name="cmdAddContactGroup" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddContactGroup"/>
                                        <net:SmallButton x:Name="cmdEditContactGroup" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditContactGroup"/>
                                        <net:SmallButton x:Name="cmdDeleteContactGroup" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteContactGroup"/>
                                    </StackPanel>
                                </Border>
                                <TextBlock x:Name="lblContacts" Text="Contacts" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Margin="4"/>
                                <ListView x:Name="grdContacts" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true"  Grid.Row="1" Grid.Column="2" Margin="4,4,0,4" Height="{Binding Path=ActualHeight, ElementName=tvwContactsGroups}" MouseDoubleClick="grdContacts_MouseDoubleClick">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn sts:WPFGridViewHelper.PropertyName="ConnectionStatus" Width="30">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Border>
                                                            <Path Stroke="{DynamicResource SmallButtonBrush}" Opacity="{Binding IsEnabled, ElementName=grdContacts, Converter={StaticResource EnabledToSmallButtonColorConverter}}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Path=ConnectionStatus, Converter={StaticResource ConnectionStatusConverter}}"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Cont_Name" sts:WPFGridViewHelper.PropertyName="Name" Header="Name" Width="152">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{Binding Icon}" Margin="2,0,2,0" VerticalAlignment="Center"/>
                                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Cont_Comp" Header="Computer name" Width="152" DisplayMemberBinding="{Binding CompName}"/>
                                            <GridViewColumn sts:WPFGridViewHelper.ColumnName="Cont_IP" Header="IP address" Width="152" DisplayMemberBinding="{Binding IpAddress}"/>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="1" Grid.Column="3" Margin="0,4,4,4">
                                    <StackPanel>
                                        <net:SmallButton x:Name="cmdAddContact" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddContact"/>
                                        <net:SmallButton x:Name="cmdEditContact" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditContact"/>
                                        <net:SmallButton x:Name="cmdDeleteContact" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteContact"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </StackPanel>
                    </TabItem>
                    <TabItem x:Name="pnsPlugins" Header="Social networks">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="pnsSocialNetworks" Text="Social networks plugins" Grid.Row="0" Grid.Column="0" Margin="4"/>
                            <ListBox x:Name="lstSocial" Grid.Row="1" Grid.Column="0" Height="{Binding Path=ActualHeight, ElementName=tvwContactsGroups}" Margin="4" SelectionChanged="lstSocial_SelectionChanged"/>
                            <Button Grid.Row="2" Grid.Column="0" Margin="4" Command="net:SettingsCommands.CheckPluginsCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <Button Grid.Row="3" Grid.Column="0" Margin="4" Command="net:SettingsCommands.RemovePluginCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" CommandParameter="cmdRemovePostPlugin"/>
                            <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2">
                                <TextBlock x:Name="lblPostCount" Text="Count of posts to receive" Margin="4"/>
                                <ComboBox x:Name="cboPostCount" Margin="4" Width="82" HorizontalAlignment="Left" ItemsSource="{StaticResource PostCount}" SelectionChanged="cboPostCount_SelectionChanged"/>
                            </StackPanel>
                            <GroupBox x:Name="pnsSocPluginDetails" Header="Plugin details" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="4">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lblSocPluginAuthor" Text="Author:" Grid.Row="0" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSocPluginVersion" Text="Version:" Grid.Row="1" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSocPluginInfo" Text="Info:" Grid.Row="2" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSocPAuthor" Grid.Row="0" Grid.Column="1" Margin="4"/>
                                    <TextBlock x:Name="lblSocPVersion" Grid.Row="1" Grid.Column="1" Margin="4"/>
                                    <TextBlock x:Name="lblSocPInfo" Grid.Row="2" Grid.Column="1" Margin="4" TextWrapping="Wrap"/>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="tbpSyncPlugins" Header="Synchronization">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="pnsSyncPlugins" Text="Synchronization plugins" Grid.Row="0" Grid.Column="0" Margin="4"/>
                            <ListBox x:Name="lstSyncPlugins" Grid.Row="1" Grid.Column="0" Height="{Binding Path=ActualHeight, ElementName=tvwContactsGroups}" Margin="4" SelectionChanged="lstSyncPlugins_SelectionChanged"/>
                            <Button Grid.Row="2" Grid.Column="0" Margin="4" Command="net:SettingsCommands.CheckPluginsCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <Button Grid.Row="3" Grid.Column="0" Margin="4" Command="net:SettingsCommands.RemovePluginCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" CommandParameter="cmdRemoveSyncPlugin"/>
                            <Button Grid.Row="4" Grid.Column="0" Margin="4" Command="net:SettingsCommands.SyncNowCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                            <CheckBox x:Name="chkIncludeBinInSync" Content="Include notes from Recycle Bin in synchronization" Grid.Row="2" Grid.Column="1" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkSaveBeforeSync" Content="Save notes before synchronization" Grid.Row="3" Grid.Column="1" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <CheckBox x:Name="chkSyncOnStart" Content="Synchronize notes on program start" Grid.Row="4" Grid.Column="1" Margin="4" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                            <Grid x:Name="grdSyncPeriod" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="tbSyncPeriod" Grid.Row="0" Margin="4" VerticalAlignment="Center" Text="Synchronize in background"/>
                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <RadioButton x:Name="optSyncPeriod" Grid.Row="0" Grid.Column="0" Content="Every (minutes):" Margin="24,4,4,4" VerticalAlignment="Center" Checked="OptionNetwork_Checked"  Unchecked="OptionNetwork_Checked"/>
                                    <ComboBox x:Name="cboSyncPeriod" Grid.Row="0" Grid.Column="1" Margin="4" Width="82" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=optSyncPeriod}" SelectionChanged="cboSyncPeriod_SelectionChanged">
                                        <ComboBox.Items>
                                            <ComboBoxItem>
                                                <sys:String>Never</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>10 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>15 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>20 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>30 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>45 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>60 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>120 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>180 min</sys:String>
                                            </ComboBoxItem>
                                            <ComboBoxItem>
                                                <sys:String>240 min</sys:String>
                                            </ComboBoxItem>
                                        </ComboBox.Items>
                                    </ComboBox>
                                    <RadioButton x:Name="optSyncTime" Grid.Row="1" Grid.Column="0" Margin="24,4,4,4"  Content="Once a day at:" VerticalAlignment="Center" Checked="OptionNetwork_Checked" Unchecked="OptionNetwork_Checked"/>
                                    <pnDateTimePicker:DateTimePicker x:Name="tpSync" Grid.Row="1" Grid.Column="1" Width="82" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=optSyncTime}" Format="ShortTime"  Margin="4" DateValueChanged="tpSync_DateValueChanged"/>
                                    <CheckBox x:Name="chkAutoRestart" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="24,4,4,4" Content="If restart is required after background synchronization, do it automatically" Checked="CheckNetwork_Checked" Unchecked="CheckNetwork_Checked"/>
                                </Grid>
                            </Grid>
                            <GroupBox x:Name="pnsSyncPluginDetails" Header="Plugin details" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="4">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="lblSyncPluginAuthor" Text="Author:" Grid.Row="0" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSyncPluginVersion" Text="Version:" Grid.Row="1" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSyncPluginInfo" Text="Info:" Grid.Row="2" Grid.Column="0" Margin="4"/>
                                    <TextBlock x:Name="lblSyncPAuthor" Grid.Row="0" Grid.Column="1" Margin="4"/>
                                    <TextBlock x:Name="lblSyncPVersion" Grid.Row="1" Grid.Column="1" Margin="4"/>
                                    <TextBlock x:Name="lblSyncPInfo" Grid.Row="2" Grid.Column="1" Margin="4" TextWrapping="Wrap"/>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                    <TabItem x:Name="tbpSmtp" Header="SMTP mail">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="pnsSmtp" Text="SMTP profiles" Grid.Row="0" Grid.Column="0" Margin="4"/>
                            <TextBlock x:Name="pnsMailContacts" Text="Mail contacts" Grid.Row="0" Grid.Column="1" Margin="4"/>
                            <ListView x:Name="grdSmtp" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true" Grid.Row="1" Grid.Column="0" Margin="4,4,4,0" Height="{Binding ActualHeight, ElementName=tvwContactsGroups}" MouseDoubleClick="grdSmtp_MouseDoubleClick">
                                <ListView.View>
                                    <GridView>
                                        <sts:FixedWidthColumn Header="" FixedWidth="30">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Selected}" Tag="{Binding Id}" Checked="grdSmtpCheck_Checked" Unchecked="grdSmtpCheck_Checked"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </sts:FixedWidthColumn>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="HostName" Header="Host name" Width="136" DisplayMemberBinding="{Binding Name}"/>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="SenderAddress" Header="Sender address" Width="136" DisplayMemberBinding="{Binding Address}"/>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="DisplayName" Header="Display name" Width="136" DisplayMemberBinding="{Binding DispName}"/>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="SmtpPort" Header="Port" Width="52" DisplayMemberBinding="{Binding Port}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="2" Grid.Column="0" Margin="4,0,4,4">
                                <StackPanel Orientation="Horizontal">
                                    <net:SmallButton x:Name="cmdAddSmtp" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddSmtp"/>
                                    <net:SmallButton x:Name="cmdEditSmtp" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditSmtp"/>
                                    <net:SmallButton x:Name="cmdDeleteSmtp" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteSmtp"/>
                                </StackPanel>
                            </Border>
                            <ListView x:Name="grdMailContacts" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true" Grid.Row="1" Grid.Column="1" Margin="4,4,4,0" Height="{Binding Path=ActualHeight, ElementName=tvwContactsGroups}" MouseDoubleClick="grdMailContacts_MouseDoubleClick">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="DispName" Header="Display name" Width="100" DisplayMemberBinding="{Binding DispName}"/>
                                        <GridViewColumn sts:WPFGridViewHelper.ColumnName="MailAddress" Header="Mail address" Width="100" DisplayMemberBinding="{Binding Address}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Grid.Row="2" Grid.Column="1" Margin="4,0,4,4">
                                <StackPanel Orientation="Horizontal">
                                    <net:SmallButton x:Name="cmdAddMailContact" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddMailContact"/>
                                    <net:SmallButton x:Name="cmdEditMailContact" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditMailContact"/>
                                    <net:SmallButton x:Name="cmdDeleteMailContact" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdDeleteMailContact"/>
                                    <net:SmallButton x:Name="cmdClearMailContacts" net:PNUtils.SmallButtonType="Clean" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdClearMailContacts"/>
                                    <net:SmallButton x:Name="cmdImportMailContact" net:PNUtils.SmallButtonType="User" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdImportMailContact"/>
                                    <Border Visibility="Hidden">
                                        <Border.ContextMenu>
                                            <ContextMenu x:Name="ctmImpContacts">
                                                <ContextMenu.CommandBindings>
                                                    <CommandBinding Command="{x:Static net:SettingsCommands.ImportOutlookCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
                                                    <CommandBinding Command="{x:Static net:SettingsCommands.ImportGMailCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
                                                    <CommandBinding Command="{x:Static net:SettingsCommands.ImportLotusCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed"/>
                                                </ContextMenu.CommandBindings>
                                                <MenuItem Command="net:SettingsCommands.ImportOutlookCommand">
                                                    <MenuItem.Icon>
                                                        <Image Source="{DynamicResource outlook}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Command="net:SettingsCommands.ImportGMailCommand">
                                                    <MenuItem.Icon>
                                                        <Image Source="{DynamicResource gmail}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Command="net:SettingsCommands.ImportLotusCommand">
                                                    <MenuItem.Icon>
                                                        <Image Source="{DynamicResource lotus}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                    </Border>
                                </StackPanel>
                            </Border>
                            <TextBlock x:Name="lblSmtp" Text="Select profile in order to use it for sending mails instead of standard e-mail program" Grid.Row="3" Grid.Column="0" Margin="4" TextWrapping="Wrap"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Row="1" x:Name="pnlProtection" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Visibility="Hidden">
            <StackPanel>
                <GroupBox x:Name="pnsPassword" Header="Password" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.33*"/>
                            <ColumnDefinition Width="0.33*"/>
                            <ColumnDefinition Width="0.33*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"  Margin="4" MinWidth="75" MinHeight="23" Padding="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Command="net:CommonCommands.PwrdCreateCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        <Button Grid.Column="1"  Margin="4" MinWidth="75" MinHeight="23" Padding="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Command="net:CommonCommands.PwrdChangeCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        <Button Grid.Column="2"  Margin="4" MinWidth="75" MinHeight="23" Padding="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" Command="net:CommonCommands.PwrdRemoveCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="pnsPasswordSet" Header="If password set" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkStoreEncrypted" Content="Store notes as encrypted files" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                        <CheckBox x:Name="chkHideTrayIcon" Content="Hide icon from system tray when program is locked" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsBackup" Header="Backup" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkBackupBeforeSaving" Content="Backup notes before saving" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="lblBackupDeepness" sts:Utils.CatchDisabledState="True" Text="Backup deepness (amount of copies for each note)" VerticalAlignment="Center" Grid.Column="0" IsEnabled="{Binding Path=IsChecked, ElementName=chkBackupBeforeSaving}" Margin="24,4,4,4"/>
                            <pnNumericUpDown:NumericUpDown x:Name="updBackup" MinWidth="82" Grid.Column="1" HorizontalAlignment="Right" MinValue="1" MaxValue="99" IsReadOnly="False" IsEnabled="{Binding Path=IsChecked, ElementName=chkBackupBeforeSaving}" Margin="4" ValueChanged="updBackup_ValueChanged"/>
                        </Grid>
                        <CheckBox x:Name="chkSilentFullBackup" Content="Silent manual full backup" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                        <GroupBox x:Name="grpFullBackup" Header="Automatic full backup" Margin="4">
                            <StackPanel>
                                <StackPanel x:Name="stkFullBackup" Orientation="Horizontal">
                                    <CheckBox x:Name="chkW0" Margin="4" Content="Sun" Tag="0" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW1" Margin="8,4,4,4" Content="Sun" Tag="1" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW2" Margin="8,4,4,4" Content="Sun" Tag="2" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW3" Margin="8,4,4,4" Content="Sun" Tag="3" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW4" Margin="8,4,4,4" Content="Sun" Tag="4" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW5" Margin="8,4,4,4" Content="Sun" Tag="5" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                    <CheckBox x:Name="chkW6" Margin="8,4,4,4" Content="Sun" Tag="6" Checked="chkW0_Checked" Unchecked="chkW0_Checked"/>
                                </StackPanel>
                                <TextBlock x:Name="lblFullBackup" Text="At:" Margin="4"/>
                                <pnDateTimePicker:DateTimePicker x:Name="dtpFullBackup" Format="ShortTime"  Margin="4" Width="100" HorizontalAlignment="Left" DateValueChanged="dtpFullBackup_DateValueChanged"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsBackupMisc" Header="Miscellaneous" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkDonotShowProtected" Content="Do not show note's content at Control Panel if note or its group is password protected" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                        <CheckBox x:Name="chkPromptForPassword" Content="Prompt for password on attempts to save as text file/copy text from/send password protected note" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="pnsLocalSync" Header="Local synchronization" Margin="4">
                    <StackPanel>
                        <CheckBox x:Name="chkIncludeBinInLocalSync" Content="Include notes from Recycle Bin in local synchronization" Margin="4" Checked="CheckProtection_Checked" Unchecked="CheckProtection_Checked"/>
                        <TextBlock Name="lblDataDir" Text="Notes files location" Margin="4"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="txtDataDir" Grid.Column="0" VerticalAlignment="Center" Margin="4" TextChanged="txtDataDir_TextChanged"/>
                            <Button Padding="8,0,8,0" Grid.Column="1" Margin="0,4,4,4" Command="net:CommonCommands.BrowseButtonCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                        </Grid>
                        <Grid IsEnabled="{Binding Path=Text, ElementName=txtDataDir, Converter={StaticResource TextLengthToEEnabledConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="tbLocalSyncPeriod" sts:Utils.CatchDisabledState="True" Grid.Row="0" Margin="4" VerticalAlignment="Center" Text="Synchronize in background"/>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <RadioButton x:Name="optLocalSyncPeriod" Grid.Column="0" Grid.Row="0" Content="Every (minutes):" Margin="24,4,4,4" VerticalAlignment="Center" Checked="OptionProtected_Checked" Unchecked="OptionProtected_Checked"/>
                                <ComboBox x:Name="cboLocalSyncPeriod" Grid.Column="1" Grid.Row="0" Margin="4" Width="82" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=optLocalSyncPeriod}" SelectionChanged="cboLocalSyncPeriod_SelectionChanged">
                                    <ComboBox.Items>
                                        <ComboBoxItem>
                                            <sys:String>Never</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>10 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>15 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>20 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>30 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>45 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>60 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>120 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>180 min</sys:String>
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <sys:String>240 min</sys:String>
                                        </ComboBoxItem>
                                    </ComboBox.Items>
                                </ComboBox>
                                <RadioButton x:Name="optLocalSyncTime" Grid.Column="0" Grid.Row="1" Content="Once a day at:" Margin="24,4,4,4" VerticalAlignment="Center" Checked="OptionProtected_Checked" Unchecked="OptionProtected_Checked"/>
                                <pnDateTimePicker:DateTimePicker x:Name="tpSyncLocal" Grid.Column="1" Grid.Row="1" Width="82" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=optLocalSyncTime}" Format="ShortTime"  Margin="4" DateValueChanged="tpSuncLocal_DateValueChanged"/>
                                <CheckBox x:Name="chkLocalAutoRestart" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="24,4,4,4" Content="If restart is required after background synchronization, do it automatically" Checked="CheckProtection_Checked"  Unchecked="CheckProtection_Checked"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="lblLocalSyncCompList" Header="Automatically synchronize with following computers when started from USB drive" Margin="4">
                    <StackPanel Orientation="Vertical">
                        <ListView x:Name="grdLocalSync" sts:WPFGridViewHelper.AutoSort="True" sts:WPFGridViewHelper.ShowGridLines="true" Margin="4,4,4,0" Height="{Binding Path=ActualHeight, ElementName=grdSearchProvs}" MouseDoubleClick="grdLocalSync_MouseDoubleClick">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn sts:WPFGridViewHelper.ColumnName="Sync_Name" Header="Compute name" Width="200" DisplayMemberBinding="{Binding CompName}"/>
                                    <GridViewColumn sts:WPFGridViewHelper.ColumnName="Sync_File_Location" Header="Notes file location" Width="200" DisplayMemberBinding="{Binding NotesFile}"/>
                                    <GridViewColumn sts:WPFGridViewHelper.ColumnName="DB_Location" Header="DB file location" Width="200" DisplayMemberBinding="{Binding DbFile}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Border Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}}" Margin="4,0,4,4">
                            <StackPanel Orientation="Horizontal">
                                <net:SmallButton x:Name="cmdAddComp" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdAddComp"/>
                                <net:SmallButton x:Name="cmdEditComp" net:PNUtils.SmallButtonType="Edit" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdEditComp"/>
                                <net:SmallButton x:Name="cmdRemoveComp" net:PNUtils.SmallButtonType="Remove" Margin="4" Command="net:CommonCommands.DummyCommand" CommandParameter="cmdRemoveComp"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        <StackPanel x:Name="navWarnings" Grid.Row="2" Visibility="Collapsed">
            <TextBlock x:Name="lblWarn1" Text="( * ) - New value will be used in newly created notes only" Margin="4"/>
            <TextBlock x:Name="lblWarn3" Text="( ** ) - Requires Windows Vista or above" Margin="4"/>
            <TextBlock x:Name="lblWarn2" Text="( *** ) - Requires program restart" Margin="4"/>
        </StackPanel>
        <Grid x:Name="navButtons" Grid.Row="3" Margin="0,4,0,4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="{DynamicResource CommonControlBorderBrush}" BorderThickness="1" Grid.Column="0" Margin="4">
                <StackPanel Orientation="Horizontal" >
                    <Button Margin="4" MinHeight="23" MinWidth="75" HorizontalAlignment="Left" Command="net:SettingsCommands.DefaultSettingsCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    <CheckBox x:Name="chkDefSettIncGroups" Content="Include settings for groups" Margin="4"/>
                </StackPanel>
            </Border>
            <Border BorderBrush="{DynamicResource CommonControlBorderBrush}" BorderThickness="1" Grid.Column="1" Margin="4">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="4" Grid.Column="0" MinHeight="23" MinWidth="75" HorizontalAlignment="Right" Command="net:SettingsCommands.SaveCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    <Button Margin="4" Grid.Column="1" IsCancel="True" MinHeight="23" MinWidth="75" Command="net:OkCancelCommands.CancelCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                    <Button Margin="4" Grid.Column="2" MinHeight="23" MinWidth="75" Command="net:SettingsCommands.ApplyCommand" Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
